name: Node.js CI

on:
  push:
    branches: [ ci ]
    #tags:
      #- "v*"

jobs:
  build:
    #if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]
        include:
          - os: ubuntu-latest
            artifact_name: built-app-artifact-name
            asset_name: built-app-asset-name

    steps:
      - name: Checkout and get the version
        #id: get_version
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs/tags/}
        
        uses: actions/checkout@v2
        
      - run: echo git fetch --all --tags

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Set env2
        run: echo ${{github.ref_name}}



      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      
      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo ${{ steps.get_version.outputs.version }}



      - name: Install dependencies
        run: npm ci

      - name: tag name
        run: echo ${{github.event.release.tag_name}}
      - name: Check Release Version
        uses: thebongy/version-check@v1
        with:
          file: package.json
          tagFormat: ${version}
        id: version_check_staging
      - name:
        run: echo "Version ${{steps.version_check_staging.outputs.releaseVersion}}"
      #- name: Build app
      #   id: built-app
      #   run: |
      #     npm run build --if-present
      #     echo ${{ github.event.release.tag_name }}
      #     echo ${{ steps.built-app.output.artifacts }}
      #     echo ${{ steps.get_version.outputs.VERSION }}
      # - name: testing accessing
      #   id: test-accessing-artifacts
      #   run: | 
      #     echo ${GITHUB_REF##*/} 
      #     echo ${GITHUB_REF#refs/*/}
      #     echo ${GITHUB_REF}
      #     echo ${GITHUB_REF/tags}
      #     echo ${{ github.event.release.tag_name }}
      #     echo ${{ steps.built-app.output.artifacts }}
      #     echo ${{ steps.get_version.outputs.VERSION }}
      #     echo $GITHUB_BASE_REF
      #     echo $GITHUB_REF
      #     echo $GITHUB_REF_TYPE
      #     echo $GITHUB_ACTION_PATH
      #     echo $GITHUB_ACTION_REPOSITORY
      #     echo $GITHUB_EVENT_PATH
      #     echo $GITHUB_JOB
      #     echo $GITHUB_WORKSPACE
      #     echo "TESTING"
      #     echo ${{ github.ref }}

      # - name: try upload to releases
      #   uses: actions/upload-artifact@v2 
      #   with:
      #     name: test3 #-${{ steps.get_version.outputs.VERSION }}
      #     path: "dist/*"

      # - name: Upload to releases
      #   uses: AButler/upload-release-assets@v2.0
      #   with:
      #     files: dist/*
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: ${{ matrix.artifact_name }}
      #     asset_name: ${{ matrix.asset_name }}
      #     tag: ${{ github.ref }}
      #     overwrite: true
      #     body: "This is my release text"