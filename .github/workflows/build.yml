name: Build
on:
  push:
    branch: [ci]

jobs:
  build-app:
    runs-on: ubuntu-latest # the runner

    steps:
      - name: Get repo to build
        uses: actions/checkout@v2 # runner use this repo
      - name: setup Node.js # runner uses node runtime to build source into app
        uses: actions/setup-node@v1
        with:
          node-version: '17'
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Build the app
        run: npm run build
        id: the-build
      - run: |
          echo 'TESTING Release secret: ${{steps.the-build.outputs.stdout}}'
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v3
      #   with: 
      #     name: main-client-artifacts
      #     path: home/tempdir
  
  # release-project:
  #   name: Release main client artifacts to Github Releases
  #   runs-on: ubuntu-latest
  #   needs: build-app
  #   steps: 
      # - name: Get built artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: main-client-artifacts
      #     path: home/tempdir
      - name: Archive artifacts
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'mainclient.zip'
          exclusions: '*.git* /*node_modules/* package-lock.json vue.config.js /*src/* /*public/* /*tests/* .env.development .env.production tsconfig.json .eslintrc.js .browserslistrc .editorconfig babel.config.js package.json README.md'
      - name: Create Github Release
        id: create-github-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
      - name: Upload to Github Releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-github-release.outputs.upload_url }}
          asset_path: ./mainclient.zip
          asset_name: mainclient-v${{ github.run_number }}.zip
          asset_content_type: application/zip

